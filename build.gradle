apply plugin: 'java'
apply plugin: 'eclipse'

tasks.eclipse.dependsOn 'cleanEclipse'

repositories {
    maven {
	url 'http://repo.gradle.org/gradle/libs-releases-local'
    }
    mavenCentral()
}

sourceSets {
    
    acceptanceTest {
	
    }
}

configurations {
    acceptanceTestCompile { extendsFrom configurations.testCompile }
}

dependencies {
    compile group: 'junit', name: 'junit-dep', version: '4.11'
    
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    acceptanceTestCompile group: 'org.gradle', name: 'gradle-tooling-api', version: gradle.gradleVersion
}

eclipse.classpath { plusConfigurations += configurations.acceptanceTestRuntime }


task acceptanceTest(type: Test, dependsOn: [uploadArchives, acceptanceTestClasses]) {
    inputs.file 'samples/gradle/build.gradle'
    outputs.file 'samples/gradle/build.gradle'
    
    testClassesDir = sourceSets.acceptanceTest.output.classesDir
    classpath = sourceSets.acceptanceTest.runtimeClasspath
    
    systemProperties(['samplesDirectory': file('samples')])
}

assert name == 'junit-single-test-method-runner'

group = 'se.ericthelin'
version = '1.0'

sourceCompatibility = 1.7

jar {
    manifest {
	attributes (
		'Implementation-Title': 'Eric Thelin\'s JUnit Single Test Method Runner',
		'Implementation-Version': version)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
	mavenLocal()
    }
}
